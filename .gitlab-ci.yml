# Kaniko is the recommended method for running Docker-builds as of May 2019. 
# See https://docs.gitlab.com/ee/ci/docker/using_kaniko.html for GitLab's documentation.

# Variables -------------------------------------------------------------------
variables:
    PROJ_NAME: 'vivado-$CI_COMMIT_REF_NAME-${OS}-${VIVADO_VERSION}-${VIEW}'


# Stages ----------------------------------------------------------------------
stages:
    - build

# Job templates ---------------------------------------------------------------
.job_template: &template_build
    stage: build
    tags:
        - docker-privileged-xl
    image: 
        # We recommend using the CERN version of the Kaniko image: gitlab-registry.cern.ch/ci-tools/docker-image-builder
        name: gitlab-registry.cern.ch/ci-tools/docker-image-builder
        entrypoint: [""]
    variables:
        NO_CACHE: true
    script:
        # Prepare Kaniko configuration file
        - echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" > /kaniko/.docker/config.json
        # Build and push the image from the Dockerfile at the root of the project.
        # To push to a specific docker tag, amend the --destination parameter, e.g. --destination $CI_REGISTRY_IMAGE:$CI_BUILD_REF_NAME
        # See https://docs.gitlab.com/ee/ci/variables/predefined_variables.html#variables-reference for available variables
        - df -ih
        - ls -lh $CI_PROJECT_DIR/$CONTEXT_DIR/
        - /kaniko/executor --context $CI_PROJECT_DIR/$CONTEXT_DIR --dockerfile $CI_PROJECT_DIR/$CONTEXT_DIR/Dockerfile --destination $TO --single-snapshot --cleanup --build-arg VIVADO_VERSION=${VIVADO_VERSION}
        - df -ih

# Jobs ------------------------------------------------------------------------
build_ubuntu_vivado_vnc:
    <<: *template_build
    variables:
        CONTEXT_DIR: ${OS}/01-${VIEW}/
        FROM: ${OS}:${OS_VERSION}
        OS: ubuntu
        OS_VERSION: "18.04"
        TO: ${CI_REGISTRY_IMAGE}/${OS}${OS_VERSION}_vivado${VIVADO_VERSION}_${VIEW}:latest
        VIEW: vnc
        VIVADO_VERSION: "2019.1"

build_sl_vivado_x11:
    <<: *template_build
    variables:
        CONTEXT_DIR: ${OS}/01-${VIEW}/
        FROM: ${OS}:${OS_VERSION}
        OS: sl
        OS_VERSION: "7"
        TO: ${CI_REGISTRY_IMAGE}/${OS}${OS_VERSION}_vivado${VIVADO_VERSION}_${VIEW}:latest
        VIEW: x11
        VIVADO_VERSION: "2019.1"


#build_image_using_kaniko:
#    stage: build
#    tags:
#        - docker-privileged-xl
#    image: 
#        # We recommend using the CERN version of the Kaniko image: gitlab-registry.cern.ch/ci-tools/docker-image-builder
#        name: gitlab-registry.cern.ch/ci-tools/docker-image-builder
#        entrypoint: [""]
#    variables:
#        NO_CACHE: true
#        FROM: ubuntu:18.04 #${CI_REGISTRY_IMAGE}/ubuntu-updated:latest
#        TO: ${CI_REGISTRY_IMAGE}/vivado:latest
#        CONTEXT_DIR: 01-vnc/
#        NO_CACHE: "true"
#    script:
#        # Prepare Kaniko configuration file
#        - echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" > /kaniko/.docker/config.json
#        # Build and push the image from the Dockerfile at the root of the project.
#        # To push to a specific docker tag, amend the --destination parameter, e.g. --destination $CI_REGISTRY_IMAGE:$CI_BUILD_REF_NAME
#        # See https://docs.gitlab.com/ee/ci/variables/predefined_variables.html#variables-reference for available variables
#        - df -ih
#        - /kaniko/executor --context $CI_PROJECT_DIR/$CONTEXT_DIR --dockerfile $CI_PROJECT_DIR/$CONTEXT_DIR/Dockerfile --destination $TO --single-snapshot --cleanup
#        - df -ih